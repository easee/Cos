stages:
  - stage: continuous_integration
    displayName: 'Build and test'
    dependsOn: []
    pool:
      name: 'AWS EC2 Pool'
    jobs:
      - job: Build
        displayName: 'Build and test'
        dependsOn: []
        steps:
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              projects: '**/*.csproj'
              arguments: '--configuration Release'
          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              projects: '**/*[Tt]ests.csproj'
              arguments: '--configuration Release'
  - stage: push_nuget_to_feed
    displayName: 'Push NuGet package to feed'
    dependsOn: [continuous_integration]
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    pool:
      name: 'AWS EC2 Pool'
    jobs:
      - job: NuGetPush
        displayName: 'Create and Push NuGet'
        dependsOn: []
        steps:
          - task: NuGetCommand@2
            inputs:
              command: pack
              packagesToPack: '**/Cos.csproj'
              packDestination: '$(Build.ArtifactStagingDirectory)'
          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              publishVstsFeed: '59035f7a-2692-4201-a7f6-86461ac0e315'
